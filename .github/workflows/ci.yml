name: Nx CI

on:
  push:
    branches:
      - main
      - renovate-github/**
  pull_request:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  main_pull_request:
    name: Nx Cloud - Affected
    if: github.event_name == 'pull_request'
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.0
    with:
      main-branch-name: main
      number-of-agents: 3
      init-commands: |
        npx nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        npx nx-cloud record -- npx nx format:check
      parallel-commands-on-agents: |
        npx nx affected --target=lint --parallel=3 --base=origin/main
        npx nx affected --target=test --parallel=3 --base=origin/main --ci --code-coverage
        npx nx affected --target=build --parallel=3 --base=origin/main

  main_push:
    name: Nx Cloud - All
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.0
    with:
      main-branch-name: main
      number-of-agents: 3
      init-commands: |
        npx nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        npx nx-cloud record -- npx nx format:check
      parallel-commands-on-agents: |
        npx nx run-many --target=lint --parallel=3
        npx nx run-many --target=test --parallel=3 --ci --code-coverage
        npx nx run-many --target=build --parallel=3

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.13.0
    with:
      number-of-agents: 3

  test:
    name: Test All
    needs: agents # wait for agents to run first.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Set node/npm/yarn versions using volta
      - uses: volta-cli/action@v4
        with:
          package-json-path: '${{ github.workspace }}/package.json'

      - name: Use the package manager cache if available
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Run all tests for workspace
        run: npx nx run-many --targets=test --parallel --max-parallel=3 --ci

      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        if: hashFiles('coverage/**/*') != ''
        with:
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
